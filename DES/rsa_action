#!/bin/bash

function string_to_dec()
{
  bin=$(echo $1 | perl -pe '$_=unpack"B*"')
  echo $bin
  echo "$((2#$bin))"
}

function calculate_prime_number()
{
  is_prime=false
  prime=-1

  while [ "$is_prime" = false ]
  do
    is_prime=true
    prime=$( shuf -i 1000000-9999999 -n 1 )
    half_prime=$(( $prime / 2 + 1 ))

    for (( i=2 ; i < $half_prime ; i++ ))
    do
      m=$(( $prime % $i ))
      if [[ $m -eq 0 ]]; then
        is_prime=false
        break
      fi
    done
  done

  echo $prime
}

function find_e()
{
  phi=$1
  e=2

  while [ $e -lt $phi ]
  do
    gcd=$(gcd $e $phi)
    if [[ $gcd -eq 1 ]]; then
      break
    else
      e=$(( $e + 1 ))
    fi
  done

  echo $e
}

function gcd()
{
  e=$1
  phi=$2
  temp=-1

  while true
  do
    temp=$(( e % $phi))
    if [[ $temp -eq 0 ]]; then
      echo $phi
      break
    fi

    e=$phi;
    phi=$temp;
  done
}

#prime1=7075183
#prime2=2191951

prime1=11
prime2=17

: <<'COMMENT'
echo calculating first prime number
prime1=$( calculate_prime_number )
prime2=-1

echo calculating second prime number

is_dif=false
while [ "$is_dif" = false ]
do
  is_dif=true
  prime2=$( calculate_prime_number )
  if [[ $prime2 -eq $prime1 ]]; then
    is_dif=false
  fi
done
COMMENT

echo prime1=$prime1
echo prime2=$prime2

#e & n for private key
n=$(( $prime1 * $prime2 ))
echo n=$n

# Find the Totient of ProductOfPrime1Prime2
phi=$(( ($prime1 - 1) * ($prime2 - 1) ))
echo phi=$phi

#gcd
e=$(find_e $phi)
echo e=$e

#private key
d=$(( ($phi + 1) / $e))
echo d=$d
string_to_dec "h"
